#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define FN1 1

/ {
    behaviors {
        kp_layer: kp_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&lt>, <&kp>;
        };

        gresc_tilde: gresc_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "GRESC_TILDE";
            bindings = <&kp ESCAPE>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        hw_soft_off: hw_soft_off {
            compatible = "zmk,behavior-soft-off";
            #binding-cells = <0>;
            hold-time-ms = <5000>;
        };
    };

    soft_off_behavior_key {
        compatible = "zmk,gpio-key-behavior-trigger";
        bindings = <&hw_soft_off>;
        key = <&wakeup_key>;
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // Base layer
            // ------------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |NUHS| ENTER   |
            // | SHIFT |NUBS| Z |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |    Shift   | FN |
            // |  LCTL  |  LWIN  |  LALT  | SPACE  | SPACE |    SPACE   |  RALT | FN  |   RWIN  | RCTRL |
            // | Rotary | (<-- Rotary switch) ----------------------------------------------------------- 

            bindings = <
&gresc_tilde          &kp N1    &kp N2    &kp N3     &kp N4     &kp N5     &kp N6    &kp N7  &kp N8    &kp N9     &kp N0    &kp MINUS  &kp EQUAL        &kp BSLH       &kp DELETE
&kp TAB               &kp Q     &kp W     &kp E      &kp R      &kp T      &kp Y     &kp U   &kp I     &kp O      &kp P     &kp LBKT   &kp RBKT         &kp BACKSPACE
&kp_layer 2 CAPSLOCK  &kp A     &kp S     &kp D      &kp F      &kp G      &kp H     &kp J   &kp K     &kp L      &kp SEMI  &kp SQT    &kp NUHS         &kp RET
&kp LSHIFT            &kp NUBS  &kp Z     &kp X      &kp C      &kp V      &kp B     &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH   &kp RIGHT_SHIFT  &mo 1
&kp LCTRL             &kp LGUI  &kp LALT  &kp SPACE  &kp SPACE  &kp SPACE  &kp RALT  &mo 1   &kp RGUI  &kp RCTRL
&kp C_PP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        fn_layer {
            // Function layer
            // ------------------------------------------------------------------------------------------
            // | RESET | F1 |  F2 |  F3 |  F4 |  F5 |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |TRNS | DEL |
            // |BT_CLR |TRNS | UP  | BT0 | BT1 | BT2 | BT3 | BT4 | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS|
            // | BOOTL  |LEFT |DOWN |RIGHT|TRNS |TRNS |TRNS | TRNS| TRNS |TRNS| TRNS |TRNS | TRNS | TRNS  |
            // | TRNS |TRNS|TRNS|TRNS|TRNS | TRNS| TRNS | TRNS |  TRNS| TRNS | TRNS| TRNS |   TRNS   |TRNS|
            // |  TRNS | TRNS | TRNS |      TRNS      | TRNS |     TRNS     |  TRNS |  TRNS | TRNS | TRNS |
            // | Rotary | (<-- Rotary switch) ----------------------------------------------------------- 

            bindings = <
&kp GRAVE  &kp F1    &kp F2           &kp F3           &kp F4           &kp F5           &kp F6           &kp F7           &kp F8           &kp F9     &kp F10  &kp F11  &kp F12  &trans  &trans
&trans     &trans    &kp UP           &trans           &trans           &trans           &trans           &trans           &trans           &trans     &trans   &trans   &trans   &trans
&mo 3      &kp LEFT  &kp DOWN         &kp RIGHT        &trans           &trans           &kp LEFT         &kp UP           &kp DOWN         &kp RIGHT  &trans   &trans   &trans   &trans
&trans     &trans    &rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans     &trans   &trans   &trans   &trans
&trans     &trans    &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans
&kp C_PP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        media_layer {
            bindings = <
&trans  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans  &trans  &trans  &trans  &kp C_REWIND  &kp C_PLAY_PAUSE  &kp C_FAST_FORWARD  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans
&trans  &trans                &trans                &trans  &trans  &trans  &trans  &trans        &trans            &trans              &trans      &trans             &trans           &trans
&trans  &trans                &trans                &trans  &trans  &trans  &trans  &trans        &trans            &trans              &trans      &trans             &trans           &trans
&trans  &trans                &trans                &trans  &trans  &trans  &trans  &trans        &trans            &trans              &trans      &trans             &trans           &trans
&trans  &trans                &trans                &trans  &trans  &trans  &trans  &trans        &trans            &trans
&trans
            >;
        };

        utility_layer {
            bindings = <
&bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans  &bt BT_CLR
&trans       &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans
&trans       &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans
&trans       &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans
&trans       &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &hw_soft_off
&trans
            >;
        };
    };
};
